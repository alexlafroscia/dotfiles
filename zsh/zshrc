# -- Dotfiles Directory --------------------------------------------------------
export XDG_CONFIG_HOME="$HOME/.config"
export DOTFILES="$HOME/.dotfiles"

# -- Helper Functions ----------------------------------------------------------
exists() {
  type "$1" >/dev/null 2>/dev/null
}

# -- Set up $PATH --------------------------------------------------------------
[[ ":$PATH:" == *":$/usr/local/bin:"* ]] || PATH="/usr/local/bin:$PATH"
[[ ":$PATH:" == *":$/usr/local/sbin:"* ]] || PATH="/usr/local/sbin:$PATH"

# -- Local Configuration (Before Default) --------------------------------------
if [[ -f "$DOTFILES/zsh/zshrc.local.pre" ]]; then
  source $DOTFILES/zsh/zshrc.local.pre
fi

# -- Extra Completions ---------------------------------------------------------
fpath=("$DOTFILES/zsh/functions" $fpath)
autoload -Uz compinit
compinit -u

# -- Theme ---------------------------------------------------------------------
export NVIM_TUI_ENABLE_TRUE_COLOR=1

# -- Named Directories ---------------------------------------------------------
unsetopt auto_name_dirs

# -- Command History -----------------------------------------------------------
export HISTSIZE=500
export SAVEHIST=500

# -- Options -------------------------------------------------------------------
unsetopt correct_all
unsetopt correct

# -- Vim Mode ------------------------------------------------------------------
bindkey -v

# -- Fancy Ctrl-Z --------------------------------------------------------------
# Allow `Ctrl-Z` to return to the program that was put into the background
# From https://blog.sher.pl/2014/03/21/how-to-boost-your-vim-productivity/#vii-use-ctrl-z-to-switch-back-to-vim
fancy-ctrl-z() {
  if [[ $#BUFFER -eq 0 ]]; then
    BUFFER="fg"
    zle accept-line
  else
    zle push-input
    zle clear-screen
  fi
}
zle -N fancy-ctrl-z
bindkey '^Z' fancy-ctrl-z

# -- Navigating History --------------------------------------------------------
bindkey '^P' history-beginning-search-backward
bindkey '^N' history-beginning-search-forward

# -- Variables -----------------------------------------------------------------
if [ "$TERM_PROGRAM" = "vscode" ]; then
  IS_VSCODE=1
else
  IS_VSCODE=
fi

if [ "$IS_VSCODE" ]; then
  export EDITOR="$(which code)"
else
  export EDITOR="$(which nvim)"
fi

# -- Add HOME bin to $PATH -----------------------------------------------------
[[ ":$PATH:" == *":$HOME/bin:"* ]] || PATH="$HOME/bin:$PATH"
[[ ":$PATH:" == *":$HOME/.bin:"* ]] || PATH="$HOME/.bin:$PATH"

# -- Add DOTFILES bin to PATH --------------------------------------------------
[[ ":$PATH:" == *":$DOTFILES/bin:"* ]] || PATH="$DOTFILES/bin:$PATH"

# -- Aliases -------------------------------------------------------------------
if exists "gittower"; then alias tower='gittower `git rev-parse --show-toplevel`'; fi

if exists "fdfind"; then alias fd=fdfind; fi

if exists "exa"; then alias e=exa; fi

if exists "proj"; then alias gp='cd `proj -a $HOME/Code | fzf --preview="exa --oneline {}"`'; fi

# Add colored output to `ls`
alias ls="ls --color"

alias vim=nvim
alias vi=nvim
alias edit="$EDITOR"

alias gst="git status"

if exists "docker"; then
  alias dm=docker-machine
  alias dc=docker-compose
  alias docker-cleanup=docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs docker rm
fi

# -- Homebrew ------------------------------------------------------------------
if [[ -f "/opt/homebrew/bin/brew" ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# -- Git -----------------------------------------------------------------------
if [ "$IS_VSCODE" ]; then
  export GIT_EDITOR="$EDITOR --wait"
fi

# -- Tmux ----------------------------------------------------------------------
export DISABLE_AUTO_TITLE="true"
alias tmux="tmux -2"

# -- TheFuck -------------------------------------------------------------------
#    https://github.com/nvbn/thefuck
eval $(thefuck --alias)

# -- ripgrep -------------------------------------------------------------------
export RIPGREP_CONFIG_PATH="$DOTFILES/ripgreprc"

# -- Volta ---------------------------------------------------------------------
if [[ -d "$HOME/.volta" ]]; then
  export VOLTA_HOME="$HOME/.volta"
  export PATH="$VOLTA_HOME/bin:$PATH"
fi

# -- fzf -----------------------------------------------------------------------
if exists "fzf"; then
  # Set up auto-complete
  [[ $- == *i* ]] && source "$(brew --prefix fzf)/shell/completion.zsh" 2> /dev/null
  # Set up keybindings
  source "$(brew --prefix fzf)/shell/key-bindings.zsh"

  export FZF_TMUX=1
  export FZF_DEFAULT_OPTS='--color 16,info:6'
  if exists "fdfind"; then
    export FZF_DEFAULT_COMMAND="fdfind --type file --follow --hidden --exclude .git --exclude .yarn/cache"
  else
    export FZF_DEFAULT_COMMAND="fd --type file --follow --hidden --exclude .git --exclude .yarn/cache"
  fi
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_CTRL_T_OPTS="--preview \"bat --color always {}\""
fi

# -- Starship Prompt -----------------------------------------------------------
eval "$(starship init zsh)"

# -- ZSH Syntax Highlighting ---------------------------------------------------
source $DOTFILES/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# -- Local Configuration (After Default) ---------------------------------------
if [[ -f "$DOTFILES/zsh/zshrc.local" ]]; then
  source $DOTFILES/zsh/zshrc.local
fi
